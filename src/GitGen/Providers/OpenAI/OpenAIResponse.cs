using System.Text.Json.Serialization;

namespace GitGen.Providers.OpenAI;

/// <summary>
///     Represents a response from OpenAI-compatible chat completion APIs.
///     Contains the generated choices and token usage information.
/// </summary>
public class OpenAIResponse
{
    /// <summary>
    ///     Gets or sets the array of generated response choices.
    ///     Typically contains one choice, but can contain multiple for certain API configurations.
    /// </summary>
    [JsonPropertyName("choices")]
    public Choice[] Choices { get; set; } = Array.Empty<Choice>();

    /// <summary>
    ///     Gets or sets the token usage statistics for this API call.
    ///     May be null if the provider does not return usage information.
    /// </summary>
    [JsonPropertyName("usage")]
    public Usage? Usage { get; set; }
}

/// <summary>
///     Represents a single response choice from the AI model.
///     Contains the generated message content.
/// </summary>
public class Choice
{
    /// <summary>
    ///     Gets or sets the message generated by the AI model.
    /// </summary>
    [JsonPropertyName("message")]
    public Message Message { get; set; } = new();
}

/// <summary>
///     Represents token usage statistics for an API call.
///     Provides detailed breakdown of input, output, and total token consumption.
/// </summary>
public class Usage
{
    /// <summary>
    ///     Gets or sets the number of tokens in the input prompt.
    /// </summary>
    [JsonPropertyName("prompt_tokens")]
    public int PromptTokens { get; set; }

    /// <summary>
    ///     Gets or sets the number of tokens in the generated completion.
    /// </summary>
    [JsonPropertyName("completion_tokens")]
    public int CompletionTokens { get; set; }

    /// <summary>
    ///     Gets or sets the total number of tokens used (prompt + completion).
    /// </summary>
    [JsonPropertyName("total_tokens")]
    public int TotalTokens { get; set; }
}